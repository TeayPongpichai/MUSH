// üü© ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå
function onOpen() {
  SpreadsheetApp.getUi()
    .createMenu("üìÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô")
    .addItem("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô", "showScheduleForm")
    .addToUi();
}

// üü© ‡πÅ‡∏™‡∏î‡∏á Sidebar
function showScheduleForm() {
  const html = HtmlService.createHtmlOutputFromFile("ScheduleForm")
    .setTitle("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô")
    .setWidth(400);
  SpreadsheetApp.getUi().showSidebar(html);
}

// üü© ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• dropdown list (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ cache ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß)
function getDropdownData() {
  const ss = SpreadsheetApp.getActive();
  const getList = (sheetName) => {
    const sheet = ss.getSheetByName(sheetName);
    const lastRow = sheet.getLastRow();
    if (lastRow < 2) return [];
    return sheet.getRange(2, 1, lastRow - 1, 1).getValues().flat();
  };

  return {
    terms: getList("Terms"),
    programs: getList("Programs"),
    departments: getList("Departments"),
    subjects: getList("Subjects"),
    teachers: getList("Teachers"),
    rooms: getList("Rooms"),
    weekdays: getList("Weekdays")
  };
}

// üü© ‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç 0‚Äì6
function getDayNumber(thaiDay) {
  const map = {
    "‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå": 0, "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå": 1, "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£": 2, "‡∏û‡∏∏‡∏ò": 3,
    "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ": 4, "‡∏®‡∏∏‡∏Å‡∏£‡πå": 5, "‡πÄ‡∏™‡∏≤‡∏£‡πå": 6
  };
  return map[thaiDay] ?? -1;
}

// üü© ‡πÅ‡∏õ‡∏•‡∏á Date ‚Üí ‡∏ß‡∏±‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
function getThaiDayName(date) {
  const days = ["‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå", "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå", "‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£", "‡∏û‡∏∏‡∏ò", "‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ", "‡∏®‡∏∏‡∏Å‡∏£‡πå", "‡πÄ‡∏™‡∏≤‡∏£‡πå"];
  return days[date.getDay()];
}

// üü© ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏≤‡∏ó‡∏µ
function toMinutes(timeStr) {
  if (typeof timeStr === 'object' && timeStr.getHours) {
    return timeStr.getHours() * 60 + timeStr.getMinutes();
  }
  const parts = timeStr.split(':');
  return parseInt(parts[0]) * 60 + parseInt(parts[1]);
}

// üü© ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö Lean + Conflict ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
function addSchedule(formData) {
  try {
    const {
      term,         // ‡πÄ‡∏ó‡∏≠‡∏°
      program,      // ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£
      department,   // ‡∏™‡∏≤‡∏Ç‡∏≤
      subject,      // ‡∏ß‡∏¥‡∏ä‡∏≤
      weekday,
      startTime,
      endTime,
      teacher,
      room
    } = formData;
    const dayOfWeek = getDayNumber(weekday);
    if (dayOfWeek === -1) return "‚ùå ‡∏ß‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";

    const sMinutes = toMinutes(startTime);
    const eMinutes = toMinutes(endTime);
    if (sMinutes == null || eMinutes == null || eMinutes <= sMinutes) {
      return "‚ùå ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î ‡πÅ‡∏•‡∏∞‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ 00:00";
    }

    const ss = SpreadsheetApp.getActive();
    const config = ss.getSheetByName("Config").getRange("A2:B2").getValues()[0];
    const [startDate, endDate] = [new Date(config[0]), new Date(config[1])];

    const sheet = ss.getSheetByName("ScheduleData");
    const existingData = sheet.getDataRange().getValues();

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î
    const holidayList = ss.getSheetByName("HolidayList").getRange("A2:A").getValues().flat()
      .filter(d => d instanceof Date).map(d => d.toDateString());

    const newRows = [];
    const conflictSet = new Set();
    const userEmail = Session.getActiveUser().getEmail();

      let currentDate = new Date(startDate);
    while (currentDate <= endDate) {
      if (currentDate.getDay() === dayOfWeek && !holidayList.includes(currentDate.toDateString())) {
        const dateStr = currentDate.toDateString();
        const newStart = sMinutes;
        const newEnd = eMinutes;

        let hasConflict = false;

        existingData.forEach(row => {
          const [tm, prog, dept, subj, d, , s, e, t, r] = row;
          if (!(d && s && e && t && r)) return;
          if (new Date(d).toDateString() !== dateStr) return;

          const existStart = toMinutes(s);
          const existEnd = toMinutes(e);
          const overlap = !(newEnd <= existStart || newStart >= existEnd);

          if (overlap) {
            if (t === teacher) conflictSet.add(`‡∏ä‡∏ô‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ${t}`);
            if (r === room) conflictSet.add(`‡∏´‡πâ‡∏≠‡∏á ${r} ‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß`);
            if (prog === program && dept === department) {
              conflictSet.add(`‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ${program}/${department} ‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô`);
            }
            hasConflict = true;
          }
        });

        if (!hasConflict) {
          const formattedDate = Utilities.formatDate(currentDate, Session.getScriptTimeZone(), "yyyy-MM-dd");
          const thaiDay = getThaiDayName(currentDate);
          newRows.push([
            term, program, department, subject,     // A-D
            formattedDate, thaiDay, startTime, endTime, // E-H
            teacher, room, userEmail                // I-K
          ]);
        }
      }

      currentDate.setDate(currentDate.getDate() + 1);
    }

    if (newRows.length > 0) {
      sheet.getRange(sheet.getLastRow() + 1, 1, newRows.length, newRows[0].length).setValues(newRows);
    }

    let message = `${newRows.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß`;
    if (conflictSet.size > 0) {
      message += `\n‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° ${conflictSet.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏ô‡∏Å‡∏±‡∏ö:\n` +
             [...conflictSet].join('\n');
    }
    return message;

  } catch (err) {
    Logger.log("‚ùå ERROR: " + err.message);
    return `‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${err.message}`;
  }
}

<!DOCTYPE html>
<html>
  <head>
    <base target="_top">
    <style>
      body {
        font-family: Arial, sans-serif;
        padding: 10px;
      }
      label {
        display: block;
        margin-top: 10px;
        font-weight: bold;
      }
      select, button {
        width: 100%;
        padding: 6px;
        margin-top: 5px;
        box-sizing: border-box;
      }
      #status {
        margin-top: 15px;
        white-space: pre-wrap;
        color: #33691e;
        font-weight: bold;
      }
      .logo {
        width: 200px;
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <!-- üî∞ ‡πÇ‡∏•‡πÇ‡∏Å‡πâ -->
    <img class="logo" src="https://sh.mahidol.ac.th/img/Logo/Logo_th.png" alt="Mahidol Logo">
    <h3>üìÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≠‡∏ô</h3>

    <!-- üîΩ Term & Program -->
    <label for="term">‡πÄ‡∏ó‡∏≠‡∏°:</label>
    <select id="term"></select>

    <label for="program">‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£:</label>
    <select id="program"></select>

    <label for="department">‡∏™‡∏≤‡∏Ç‡∏≤:</label>
    <select id="department"></select>

    <label for="subject">‡∏ß‡∏¥‡∏ä‡∏≤:</label>
    <select id="subject"></select>

    <!-- üîΩ ‡∏ß‡∏±‡∏ô ‡πÄ‡∏ß‡∏•‡∏≤ -->
    <label for="weekday">‡∏ß‡∏±‡∏ô:</label>
    <select id="weekday"></select>

    <label for="startTime">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°:</label>
    <select id="startTime">
      <option value="08:00">08:00</option>
      <option value="09:00">09:00</option>
      <option value="10:00">10:00</option>
      <option value="11:00">11:00</option>
      <option value="12:00">12:00</option>
      <option value="13:00">13:00</option>
      <option value="14:00">14:00</option>
      <option value="15:00">15:00</option>
      <option value="16:00">16:00</option>
      <option value="17:00">17:00</option>
      <option value="18:00">18:00</option>
      <option value="19:00">19:00</option>
      <option value="20:00">20:00</option>
    </select>

    <label for="endTime">‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î:</label>
    <select id="endTime">
      <option value="09:00">09:00</option>
      <option value="10:00">10:00</option>
      <option value="11:00">11:00</option>
      <option value="12:00">12:00</option>
      <option value="13:00">13:00</option>
      <option value="14:00">14:00</option>
      <option value="15:00">15:00</option>
      <option value="16:00">16:00</option>
      <option value="17:00">17:00</option>
      <option value="18:00">18:00</option>
      <option value="19:00">19:00</option>
      <option value="20:00">20:00</option>
    </select>

    <!-- üîΩ ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå ‡∏´‡πâ‡∏≠‡∏á -->
    <label for="teacher">‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå:</label>
    <select id="teacher"></select>

    <label for="room">‡∏´‡πâ‡∏≠‡∏á:</label>
    <select id="room"></select>

    <!-- üîò ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å -->
    <button onclick="submitForm()">‚ûï ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
    <div id="status"></div>

    <script>
      function submitForm() {
        const data = {
          term: document.getElementById("term").value,
          program: document.getElementById("program").value,
          department: document.getElementById("department").value,
          subject: document.getElementById("subject").value,
          weekday: document.getElementById("weekday").value,
          startTime: document.getElementById("startTime").value,
          endTime: document.getElementById("endTime").value,
          teacher: document.getElementById("teacher").value,
          room: document.getElementById("room").value,
        };

        document.getElementById("status").innerText = "‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...";
        google.script.run.withSuccessHandler(function (msg) {
          document.getElementById("status").innerText = msg;
        }).addSchedule(data);
      }

      function loadDropdowns() {
        google.script.run.withSuccessHandler(function (data) {
          const setOptions = (id, list) => {
            const sel = document.getElementById(id);
            sel.innerHTML = "";
            list.forEach(item => {
              const opt = document.createElement("option");
              opt.value = item;
              opt.text = item;
              sel.appendChild(opt);
            });
          };

          setOptions("term", data.terms);
          setOptions("program", data.programs);
          setOptions("department", data.departments);
          setOptions("subject", data.subjects);
          setOptions("weekday", data.weekdays);
          setOptions("teacher", data.teachers);
          setOptions("room", data.rooms);
        }).getDropdownData();
      }

      loadDropdowns();
    </script>
  </body>
</html>
